const input = `U 2
D 2
R 2
U 2
D 1
L 2
R 2
D 1
R 2
D 1
R 2
L 1
U 1
L 2
R 2
L 2
U 2
R 2
L 1
U 1
R 2
U 1
D 2
L 1
U 2
D 1
L 1
R 1
L 1
D 1
R 1
D 2
L 1
U 2
L 1
U 1
D 2
U 1
R 2
U 1
R 2
D 1
U 1
D 2
L 2
U 2
L 2
R 1
L 1
U 2
D 2
U 1
R 2
L 2
U 1
R 1
L 2
D 1
L 1
U 2
D 1
R 1
U 2
R 2
U 2
R 2
D 1
L 2
R 2
U 2
D 2
U 2
L 1
U 1
L 2
U 1
D 1
L 1
D 1
L 1
R 1
L 1
R 2
D 1
L 1
D 2
R 2
L 1
U 2
L 1
U 2
L 1
U 1
D 2
U 1
L 1
R 1
D 1
L 2
U 1
L 1
R 2
D 1
L 2
U 1
L 2
D 2
R 2
D 2
U 1
D 2
R 3
U 2
L 2
R 3
L 2
U 3
L 3
D 1
R 2
L 1
R 2
U 3
R 3
L 1
D 2
R 3
L 2
D 3
L 3
U 1
R 1
D 2
R 2
D 3
L 3
U 3
R 3
D 2
U 1
D 3
L 2
R 1
D 3
L 3
D 3
L 2
D 3
L 1
D 2
R 2
L 3
U 2
R 2
L 1
U 1
D 3
R 3
U 2
R 3
D 1
R 1
U 3
D 2
L 2
D 2
L 3
U 2
R 3
D 1
L 3
U 1
R 3
U 1
D 1
U 2
D 1
R 2
L 2
D 1
R 1
D 2
L 1
U 1
D 1
R 2
D 1
L 2
R 1
D 3
U 1
D 3
U 2
L 1
U 3
D 2
L 3
U 2
D 3
R 3
D 3
U 3
R 1
U 2
L 3
D 1
R 3
D 2
U 2
D 2
L 3
U 3
D 3
R 3
L 2
D 3
U 3
D 3
U 2
R 2
L 3
R 3
U 1
D 1
U 2
L 4
D 1
U 1
L 2
D 4
U 3
L 1
U 1
D 1
L 4
R 4
L 4
R 2
U 4
L 2
R 1
L 3
U 3
D 2
L 3
U 4
R 3
L 4
D 2
U 3
D 2
U 2
L 4
D 2
L 1
R 4
U 4
D 2
U 4
L 4
D 2
L 3
U 3
D 1
R 1
U 1
D 4
U 3
L 4
D 1
L 4
U 1
L 2
U 3
D 2
L 3
U 4
D 2
U 1
D 1
U 1
R 2
L 2
D 3
U 2
R 1
U 1
L 4
U 1
R 2
D 3
R 1
D 1
R 3
D 3
L 1
U 3
L 3
D 4
L 3
D 4
L 1
D 1
R 1
D 1
U 4
L 2
U 3
D 4
R 4
D 1
U 2
D 4
U 1
R 4
L 2
D 3
U 4
R 3
D 1
L 3
D 4
R 4
L 3
D 2
L 3
U 3
R 3
D 1
R 1
L 2
D 2
U 4
R 1
L 1
D 2
U 3
D 3
L 3
D 5
L 1
U 2
L 5
U 3
R 3
L 2
U 2
L 1
U 5
L 4
D 1
L 3
D 5
U 3
R 5
D 1
L 5
R 5
L 5
D 4
U 4
L 5
U 5
R 5
U 2
D 5
L 5
U 3
L 3
U 4
L 5
U 3
D 4
R 3
U 1
L 2
U 5
L 1
U 2
D 1
U 1
D 1
R 4
L 1
R 2
D 2
R 3
L 5
R 2
D 5
U 4
R 5
D 3
L 1
D 3
R 3
L 1
R 4
D 3
L 5
D 1
R 1
U 4
D 2
R 3
U 4
D 3
U 1
D 1
R 1
D 4
U 1
L 5
R 1
U 5
L 4
R 1
L 1
R 4
D 3
U 3
D 3
U 4
L 2
U 1
R 2
U 1
D 4
U 4
R 1
U 4
R 3
L 4
R 2
L 4
D 5
R 3
U 1
D 1
L 3
R 2
U 1
D 3
U 1
D 1
R 3
U 2
L 6
R 1
D 1
R 5
L 5
U 4
D 1
L 6
D 5
L 3
D 6
R 1
U 3
D 3
R 5
U 1
R 5
D 1
L 1
D 4
L 1
D 4
R 1
D 5
U 6
L 5
R 2
U 2
D 6
R 3
U 6
L 2
D 5
U 3
R 1
D 3
L 1
D 3
U 1
D 3
U 4
R 2
D 3
R 2
D 2
L 3
U 2
R 6
D 4
R 4
D 1
U 3
D 1
L 3
U 6
R 4
D 3
R 3
L 4
R 2
U 5
D 6
L 5
U 3
L 4
D 2
R 2
D 3
L 6
D 1
U 1
R 4
L 5
D 3
U 4
L 2
U 5
L 2
U 5
D 1
L 4
U 1
R 2
L 3
D 1
U 4
D 2
U 2
L 1
D 4
R 2
L 3
R 2
D 6
R 2
D 3
R 3
D 2
U 6
D 4
R 4
U 4
L 5
R 3
L 4
D 3
L 2
R 2
D 1
L 6
R 7
L 3
U 3
D 6
U 4
R 4
D 7
L 4
U 1
L 5
R 5
L 5
U 7
R 1
D 2
R 6
D 6
U 2
R 1
U 2
L 5
D 7
U 5
L 3
U 4
L 5
U 4
L 2
D 1
U 3
R 4
L 5
R 5
L 4
R 3
L 7
R 4
U 1
L 4
R 4
U 7
D 3
U 4
L 7
D 5
L 1
D 5
L 7
U 5
L 5
D 3
U 5
D 3
U 7
R 5
D 1
U 2
L 1
U 1
D 1
L 1
U 6
D 2
L 7
U 5
R 4
L 3
U 2
L 1
R 1
L 2
D 3
L 3
U 4
D 4
U 7
D 7
U 6
D 7
R 5
U 7
D 4
U 3
R 3
D 3
U 6
L 6
U 1
R 1
U 7
R 2
U 1
D 1
R 1
D 1
L 6
U 6
D 7
R 4
D 1
L 2
U 6
L 2
D 2
R 2
D 3
L 3
R 5
D 1
R 4
L 1
U 1
R 3
L 8
U 3
L 3
R 5
L 8
D 1
R 1
D 8
L 4
D 2
L 4
U 3
D 6
R 2
U 4
D 6
R 8
D 4
L 7
R 6
U 2
R 1
U 3
R 2
L 1
R 8
L 2
D 6
R 6
D 6
U 2
D 6
R 7
D 4
U 6
R 5
D 8
L 3
R 6
D 4
R 4
U 2
D 8
L 8
U 6
D 2
R 3
L 2
D 6
U 8
R 3
D 3
L 5
D 5
L 4
R 8
D 3
U 3
D 2
R 8
U 4
L 8
U 2
R 1
L 4
D 5
L 5
R 5
D 3
L 7
D 4
L 6
D 2
U 3
D 2
L 2
D 6
R 2
U 6
R 7
L 8
U 3
D 8
L 1
U 8
L 8
D 2
R 6
U 4
D 8
U 3
L 7
D 7
L 8
U 8
L 4
U 6
L 1
U 4
D 7
U 3
R 2
D 4
L 5
U 8
R 4
U 1
R 2
U 4
D 7
U 7
R 7
D 7
U 9
L 4
D 8
U 6
L 3
D 1
U 8
L 9
U 8
D 8
U 2
L 1
U 5
L 9
U 4
D 7
L 5
U 4
R 5
D 2
L 3
D 5
R 3
L 2
D 9
U 5
L 6
U 7
D 2
R 2
D 3
R 5
U 7
L 1
U 9
R 3
D 8
R 6
D 5
U 9
R 9
D 3
U 8
D 3
R 6
D 4
U 8
L 4
D 8
R 2
U 2
R 3
D 9
L 9
U 7
R 4
D 4
L 5
U 1
D 3
R 6
L 4
R 1
D 6
R 4
L 4
U 6
D 2
L 2
D 3
R 8
D 3
U 4
L 4
D 2
U 2
L 4
D 9
R 9
D 6
U 7
L 8
U 6
D 5
R 2
D 5
U 9
R 5
D 7
U 2
L 3
R 2
U 5
L 4
D 5
U 2
L 9
U 3
R 2
D 9
R 5
D 9
U 2
R 2
L 6
U 3
L 6
R 8
U 5
D 8
R 9
L 2
R 2
U 1
D 10
R 8
L 6
D 9
R 5
L 10
R 2
L 3
R 9
D 7
U 10
D 9
L 7
U 8
D 7
U 2
D 1
U 5
R 9
U 9
R 6
D 4
L 3
D 6
R 10
D 2
L 4
U 8
R 6
L 3
U 1
D 8
R 6
D 4
L 1
R 3
L 10
U 4
D 5
U 1
R 3
U 5
R 5
D 9
R 1
L 4
U 4
R 4
D 7
L 1
U 6
R 6
U 1
D 4
R 2
L 3
D 6
L 3
R 1
L 10
D 1
L 1
U 6
R 7
L 8
U 2
D 10
R 4
D 9
R 2
U 9
L 2
U 7
D 4
U 4
R 9
U 9
R 6
D 7
L 8
U 1
D 6
L 6
U 8
D 3
R 4
L 4
D 1
L 2
D 3
L 2
U 1
L 5
D 2
U 8
L 1
U 5
L 3
U 3
R 3
U 1
L 7
D 9
R 3
D 10
R 8
L 5
D 3
U 6
R 4
U 4
D 2
L 5
U 11
L 3
U 1
L 6
D 1
L 2
U 8
R 6
L 4
R 2
U 3
L 3
D 4
L 2
R 5
U 4
D 5
U 10
R 1
D 6
L 4
U 9
D 3
U 5
D 9
L 1
U 8
D 11
L 4
D 4
L 5
D 7
L 7
R 10
U 5
R 1
D 10
R 3
D 11
R 7
L 6
U 7
D 4
L 7
U 8
R 6
L 4
U 5
L 7
R 2
D 10
L 8
R 4
U 1
R 5
L 2
R 4
L 6
R 4
U 10
R 6
U 9
R 9
D 6
L 7
D 1
U 1
L 8
U 1
D 8
L 10
R 6
D 4
R 9
D 4
R 3
D 4
U 8
L 3
D 7
L 2
R 10
U 5
R 4
L 3
D 6
U 7
R 8
D 5
R 6
L 7
R 4
U 6
L 8
D 8
R 6
L 6
U 8
R 10
U 4
R 2
D 2
L 11
R 10
L 5
U 10
L 5
D 12
L 7
D 8
L 2
U 1
L 11
R 3
D 8
U 7
L 6
D 9
L 12
U 7
L 11
R 7
U 8
L 4
D 9
U 6
D 9
R 7
L 4
R 12
U 8
D 6
U 8
D 6
U 5
L 2
U 2
L 9
D 10
L 11
U 10
R 4
L 12
U 6
L 11
R 10
U 9
L 2
D 11
L 11
D 10
U 8
R 10
L 7
R 6
L 6
U 5
L 8
D 5
U 7
L 5
D 8
R 5
L 7
D 10
L 10
D 12
L 8
R 11
U 6
L 12
D 9
U 5
R 2
U 6
D 11
U 5
R 1
L 2
R 3
U 8
R 4
L 10
R 6
D 9
L 3
U 11
L 4
U 1
R 5
L 8
D 8
U 2
D 7
U 5
R 10
L 4
D 4
U 2
L 7
D 12
U 12
D 5
U 12
R 3
L 4
U 10
L 1
R 2
L 9
R 9
L 5
U 5
L 10
U 12
L 3
D 5
U 12
L 10
D 11
U 12
L 2
U 11
R 6
D 10
U 6
L 5
D 10
U 10
D 12
U 3
L 10
U 9
R 4
U 4
L 12
R 12
L 4
D 5
L 9
U 5
L 11
R 12
D 8
L 6
U 10
D 2
U 11
D 6
R 10
D 1
L 5
U 1
D 10
U 1
L 13
U 11
L 6
R 1
U 11
D 10
R 11
L 3
U 6
R 13
U 13
L 6
R 4
D 3
L 10
U 2
R 9
D 6
L 12
U 11
D 9
R 2
L 2
D 4
R 13
L 7
R 7
L 9
R 11
U 4
D 2
L 4
R 12
L 3
D 8
U 9
D 3
R 11
U 11
D 13
U 1
D 6
U 2
R 13
L 5
U 6
L 5
U 13
L 12
D 7
L 12
R 4
U 4
D 3
L 5
D 10
U 10
L 2
U 11
L 9
U 11
R 7
D 4
U 9
D 7
R 6
L 2
D 2
L 1
U 10
R 5
U 5
R 1
L 10
D 11
U 5
D 13
R 9
D 6
R 2
D 13
R 12
L 11
D 6
R 9
U 12
R 11
U 6
R 12
D 4
R 11
L 5
D 1
U 5
R 8
D 1
R 12
L 9
U 6
L 9
U 3
L 6
R 3
U 2
R 3
U 14
L 7
R 7
L 12
U 7
R 5
D 7
L 10
U 14
D 8
L 5
U 11
D 4
U 10
R 9
U 4
R 1
L 11
U 13
D 8
R 10
L 3
U 11
L 5
U 2
R 6
U 3
R 10
L 4
R 3
D 8
U 11
L 11
U 6
R 6
U 8
R 4
L 10
R 2
U 4
L 2
D 12
R 12
D 4
U 14
R 6
U 1
R 9
L 5
U 9
D 5
R 13
U 11
L 8
R 11
D 9
L 8
D 8
U 5
R 2
L 3
D 6
U 9
D 1
L 8
U 6
L 6
R 8
D 13
R 12
L 5
U 8
R 11
D 4
U 13
D 10
U 4
D 3
L 14
R 14
D 5
R 2
D 7
L 13
U 1
L 14
U 15
D 11
R 2
U 15
R 11
L 8
U 11
D 4
R 2
U 8
L 8
R 11
U 9
L 11
D 4
L 8
U 9
L 9
D 15
U 1
L 8
U 7
L 12
U 13
R 7
L 6
D 13
U 1
L 9
D 11
R 8
D 3
R 11
L 8
R 9
U 2
L 1
U 5
D 14
R 3
U 12
R 4
U 15
D 1
R 11
L 11
U 11
L 1
D 12
U 7
L 13
R 4
U 5
D 15
L 14
R 10
U 9
R 7
D 13
L 15
R 10
L 2
R 5
D 12
U 13
R 6
L 15
R 14
D 1
U 1
L 2
U 11
R 15
U 8
R 9
U 5
L 9
D 14
R 9
D 9
U 8
R 8
U 3
R 7
D 11
R 4
U 9
R 9
U 11
D 4
U 12
L 9
R 3
D 7
L 6
R 1
D 9
R 1
D 4
R 16
U 12
R 8
D 7
L 7
R 9
U 16
R 15
U 14
L 14
D 3
R 4
U 4
D 1
L 2
D 11
R 2
U 2
D 16
U 4
D 5
R 14
D 3
R 5
D 10
R 2
L 4
U 6
R 9
D 16
R 12
U 2
L 16
R 7
L 8
R 5
L 5
U 14
D 16
U 7
R 2
U 15
L 3
R 7
L 5
U 8
R 11
D 3
L 5
U 7
L 8
R 3
U 3
D 5
U 13
L 8
U 1
D 13
R 11
L 2
U 14
R 15
U 2
D 7
R 15
L 5
D 9
U 8
R 5
L 15
D 3
R 10
D 10
U 7
D 7
U 14
R 2
U 8
R 14
L 11
R 16
U 11
D 16
U 2
L 10
U 5
D 6
L 7
U 8
D 10
R 11
L 7
D 5
U 6
L 5
D 5
R 1
L 7
U 9
L 5
U 3
D 7
R 14
U 9
D 6
L 13
U 8
L 5
D 5
R 3
U 7
D 6
U 8
R 16
U 17
L 5
R 8
L 8
U 8
L 10
D 17
R 5
D 3
L 17
R 17
D 4
R 15
D 6
L 3
R 17
D 9
L 13
U 4
D 2
L 17
R 1
L 14
D 17
L 9
R 12
U 14
D 12
U 3
R 7
D 1
L 13
R 13
U 16
D 13
U 15
R 15
U 4
D 11
L 7
U 1
D 14
U 8
L 11
D 13
L 12
U 17
L 13
U 2
R 10
L 12
R 12
U 1
R 8
U 10
D 15
R 3
U 4
R 12
L 9
D 15
L 13
D 15
L 7
D 8
L 7
U 6
L 17
R 4
D 10
U 11
L 8
R 14
U 9
R 9
L 6
U 1
L 5
D 11
R 10
L 16
U 15
L 12
R 13
D 5
L 4
D 12
L 6
R 3
D 12
L 4
U 2
L 16
D 6
R 15
U 7
D 2
L 14
D 6
R 14
D 7
U 11
R 4
D 3
R 6
L 3
D 11
U 2
R 5
U 3
L 1
U 7
R 13
U 12
D 12
R 13
D 7
L 12
D 10
U 14
R 12
D 4
R 2
U 16
D 9
L 14
U 14
D 8
L 7
R 7
D 18
U 18
R 8
L 15
U 12
D 11
L 16
D 18
R 14
L 5
R 12
D 11
R 13
L 17
D 4
L 10
U 1
L 8
U 10
R 13
D 2
L 14
D 1
R 5
L 4
R 11
L 7
D 2
R 8
L 13
R 5
L 5
R 11
U 15
D 3
U 2
R 6
U 1
R 8
L 5
U 1
R 9
D 13
R 8
U 17
L 16
U 3
L 9
D 9
U 6
L 8
R 13
L 7
R 16
U 6
L 13
U 18
L 17
D 15
R 5
U 6
D 11
U 15
L 4
R 14
U 9
R 11
U 9
L 11
D 7
U 9
L 10
D 4
R 7
U 7
D 8
R 1
D 12
R 16
U 7
R 9
D 10
R 1
L 1
U 16
L 4
U 11
D 1
U 3
R 17
U 17
L 12
R 9
U 14
D 4
L 6
R 4
L 15
U 1
D 2
U 9
R 16
L 1
R 2
L 12
U 12
D 7
R 13
D 6
L 2
D 3
U 8
L 7
U 16
L 15
D 18
L 19
U 7
R 17
D 7
U 3
R 12
D 1
L 17
U 19
D 15
R 3
D 5
U 17
D 16
U 2
R 13
D 7
U 19
L 5
R 3
D 15
L 12
D 19
L 19
U 1
R 10
D 14
U 3
R 1
L 6
U 14
L 11
R 10
L 7
R 14
D 9
U 14
R 5
L 19
U 10
L 12
U 10
L 3
D 13
U 12
R 12
D 6
L 2
U 1
D 16
U 9
L 7
R 14
L 15
U 9
L 19
U 14
D 9
U 15
L 13
U 12
L 1
D 7
U 7
L 7
R 2
U 16
R 6
D 11
U 7
D 11
U 19
R 13
D 7
R 7
L 6
R 14
L 18
D 2
L 5
D 8
L 7
U 17
D 15
U 19`;

const testinput = `R 5
U 8
L 8
D 3
R 17
D 10
L 25
U 20`;

const moves = input.split(/\n/g).map(l => l.split(' ').map((v, i) => i == 1 ? parseInt(v) : v));
// console.log(moves);

const initial_pos = [0, 0];
let H = [0, 0];
let T = [0, 0];
const SNAKE = new Array(10).fill().map(r => [0,0]);
let T_visited_pos = {'0,0': 1}; // starting position
const UP = 'U', DOWN = 'D', LEFT = 'L', RIGHT = 'R';
const R = 0, C = 1; // LeftRight (column movement) and UpDown (row movement) movement
const log = [];
const T_visited_log = new Set();
const DEBUG = false;

const move_H = (H, dir) => {
  console.log('move', dir);
  if (dir == UP) {
    H[R]--;
  }
  else if (dir == DOWN) {
    H[R]++;
  }
  else if (dir == LEFT) {
    H[C]--;
  }
  else if (dir == RIGHT) {
    H[C]++;
  }
}

const mark_visited_T = (R, C) => {
  DEBUG && console.log('mark_visited_T');
  T_visited_log.add('[' + R+','+C + ']');
  if (!T_visited_pos[R + ',' + C]) {
    T_visited_pos[R + ',' + C] = 0;
  }
  T_visited_pos[R + ',' + C]++;
}

let did_nothing = 0;
let unmatched_case = 0;
const update_T = (T, H, i=-1) => {
  false && console.log('update_T T=', T[R] +','+T[C], 'H=', H[R] +','+H[C]);
  if (
    // overlap
    (T[R] == H[R] && T[C] == H[C]) || 
    // Diff Row same Col
    (Math.abs(T[R] - H[R]) == 1 && T[C] == H[C]) ||
    // Diff Col same Row
    (Math.abs(T[C] - H[C]) == 1 && T[R] == H[R]) ||
    // Diagonal distance is 1
    (Math.abs(T[R] - H[R]) == 1 && Math.abs(T[C] - H[C]) == 1)
    ) {
      // Do nothing
      did_nothing++;
      false && console.log(i + ' Overlap|DiffRowSameCol|DiffColSameRow|DiagDist1 T=' + T[R] + ',' + T[C] + ' H=' + H[R] + ',' + H[C]);
      return null;
  }
  else {
    if (T[R] == H[R]) { // same row
      false && console.log('Same Row');

      let l = i + ' SameRow T=' + T[R] + ',' + T[C] + ' H=' + H[R] + ',' + H[C];

      if (T[C] < H[C]) {
        T[C]++;
      }
      else {
        T[C]--;
      }

      false && console.log(l + ' resolved to T=' + T[R] + ',' + T[C]);
      return [T[R], T[C]];
    }
    else if (T[C] == H[C]) { // same column
      false && console.log('Same column');
      
      let l = i + ' SameCol T=' + T[R] + ',' + T[C] + ' H=' + H[R] + ',' + H[C];

      if (T[R] < H[R]) {
        T[R]++;
      }
      else {
        T[R]--;
      }

      false && console.log(l + ' resolved to T=' + T[R] + ',' + T[C]);
      return [T[R], T[C]];
    }
    else if (Math.abs(T[C] - H[C]) == 2 && Math.abs(T[R] - H[R]) == 2) {
      let l = i + ' DiagDist2RowCol T=' + T[R] + ',' + T[C] + ' H=' + H[R] + ',' + H[C];

      if (T[R] > H[R]) {
        T[R]--; // move a row closer up
      }
      else {
        T[R]++; // move a row close down
      }
      if (T[C] < H[C]) {
        T[C]++; // move a column closer to the right
      }
      else {
        T[C]--; // move a col closer to the left
      }
      false && console.log(l, ' resolved to T=', T[R] +','+T[C]);
      return [T[R], T[C]];
    }
    else if (Math.abs(T[C] - H[C]) == 1) {
      false && console.log('Diagonal distance Row');

      let dist_col = Math.abs(T[C] - H[C]);

      let l = i + ' DiagDistColGT1 (DistCol='+dist_col+') T=' + T[R] + ',' + T[C] + ' H=' + H[R] + ',' + H[C];
      // T[C] = H[C]; 
      // T moves to same col as H
      if (T[C] < H[C]) {
        T[C]++;
      }
      else {
        T[C]--;
      }
      if (T[R] > H[R]) { // T below H, so follow
        T[R] = H[R]+1; // move below H
      }
      else {
        T[R] = H[R]-1; // move above H
      }

      false && console.log(l, ' resolved to T=', T[R] +','+T[C]);
      // mark_visited_T(T[R], T[C]);
      return [T[R], T[C]];
    }
    else if (Math.abs(T[R] - H[R]) == 1) {
      false && console.log('Diagonal distance Column');

      let dist_row = Math.abs(T[R] - H[R]);

      let l = i + ' DiagDistRowGT1 (DistRow='+dist_row+') T=' + T[R] + ',' + T[C] + ' H=' + H[R] + ',' + H[C];
      // T[R] = H[R]; 
      // T moves to same row as H
      if (T[R] > H[R]) {
        T[R]--;
      }
      else {
        T[R]++;
      }
      if (T[C] < H[C]) { // T behind H, so follow
        T[C] = H[C]-1; // move behind H
      }
      else {
        T[C] = H[C]+1; // move above H
      }

      false && console.log(l + ' resolved to T=' + T[R] + ',' + T[C]);
      // mark_visited_T(T[R], T[C]);
      return [T[R], T[C]];
    }
    else {
      console.log(i + ' UNMATCHED T=' + T[R] +','+T[C], 'H=' + H[R] +','+H[C]);
      unmatched_case++;
    }
  }
}

const process_moves = () => {
  DEBUG && console.log('Total moves: ', moves.length);
  for (let m = 0; m < moves.length; m++) {
    let move = moves[m];
    true && console.log('move=' + move[0] + ',' + move[1]);
    for (let i = 0; i < move[1]; i++) {
      // move_H(H, move[0]);
      // let vp = update_T(T, H);
      // if (vp != null) {
      //   mark_visited_T(vp[0], vp[1]);
      // }
      // DEBUG && console.log('move=' + move[0] + ',' + move[1], ' H=', H, 'T=', T);
      
      // SNAKE
      DEBUG && console.log('move=' + move[0] + ',' + move[1], JSON.stringify(SNAKE));
      move_H(SNAKE[0], move[0]);
      let visited = null;
      for (let s = 1; s < SNAKE.length; s++) {
        visited = update_T(SNAKE[s], SNAKE[s-1], s);
      }
      DEBUG && console.log('move=' + move[0] + ',' + move[1], JSON.stringify(SNAKE));
      DEBUG && console.log('visited: ', visited);
      if (visited != null) {
        mark_visited_T(visited[0], visited[1]);
      }
      console.log('---');
    }
  }
}

process_moves();
console.log(Object.entries(T_visited_pos).length);
console.log(T_visited_log.size);
console.log('did nothing: ', did_nothing);
console.log('unmatched_case: ', unmatched_case);
// console.log(SNAKE);
// console.log(JSON.stringify(log));
// console.log('did nothing: ', did_nothing);